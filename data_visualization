import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


def plot_trends(df, keyword_column="keyword", time_column="timestamp", value_column="value"):
    """
    Plot time-series trends for each unique keyword in the provided DataFrame.

    Args:
        df (pd.DataFrame): The input DataFrame containing time-series data.
        keyword_column (str): The column name representing keywords (e.g., hashtags, categories). Default is "keyword".
        time_column (str): The column name representing time or date values. Default is "timestamp".
        value_column (str): The column name representing the values to be plotted (e.g., post count). Default is "value".
    """
    # Ensure the specified columns exist in the DataFrame
    if keyword_column not in df.columns or time_column not in df.columns or value_column not in df.columns:
        raise ValueError(f"One or more specified columns {keyword_column}, {time_column}, {value_column} not found in the DataFrame")

    # Get the unique keywords/categories for plotting
    keywords = df[keyword_column].unique()

    # Set up the figure for multiple subplots
    num_keywords = len(keywords)
    cols = 4  # Number of columns in the grid
    rows = (num_keywords + cols - 1) // cols  # Calculate the number of rows needed

    fig, axs = plt.subplots(rows, cols, figsize=(15, 4 * rows))
    axs = axs.flatten()  # Flatten the 2D array of subplots into a 1D array for easier iteration

    # Loop through each keyword and plot the time-series trend
    for i, keyword in enumerate(keywords):
        keyword_df = df[df[keyword_column] == keyword]

        # Plot value over time for the given keyword
        axs[i].plot(keyword_df[time_column], keyword_df[value_column], marker='o', linestyle='-')
        axs[i].set_title(f"Trend for {keyword}")
        axs[i].set_xlabel(time_column.capitalize())
        axs[i].set_ylabel(value_column.capitalize())
        axs[i].tick_params(axis='x', rotation=45)

    # Hide any empty subplots (if there are more subplots than keywords)
    for j in range(i + 1, len(axs)):
        fig.delaxes(axs[j])

    plt.tight_layout()
    plt.show()


if __name__ == "__main__":
    # Example usage: Load preprocessed data
    # Customizing column names based on the user's dataset
    df = pd.read_csv("scraped_data.csv", names=["timestamp", "url", "keyword", "scraped_content", "value"])
    df['timestamp'] = pd.to_datetime(df['timestamp'])

    # Plot trends using specified column names
    plot_trends(df, keyword_column="keyword", time_column="timestamp", value_column="value")
